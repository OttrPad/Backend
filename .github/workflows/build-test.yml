name: Build and Test

on:
  pull_request:
    branches:
      - main
      - master
  push:
    branches-ignore:
      - main
      - master

jobs:
  build:
    name: Build All Services
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [api, core, collab, exe]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.13.1

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - name: Setup pnpm cache
        uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build ${{ matrix.service }}
        run: pnpm --filter=${{ matrix.service }} build

      - name: Test ${{ matrix.service }}
        run: pnpm --filter=${{ matrix.service }} test --passWithNoTests
        continue-on-error: true

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [api, core, collab, exe]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image for ${{ matrix.service }}
        uses: docker/build-push-action@v5
        with:
          context: .
          file: apps/${{ matrix.service }}/Dockerfile
          push: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ottrpad-${{ matrix.service }}:test
